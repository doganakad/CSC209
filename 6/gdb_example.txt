Script started on Sun Oct 30 19:27:34 2016
b2210-01:~% gdb overlf[K[Kflow
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from overflow...done.
(gdb) break main
Breakpoint 1 at 0x4005c5: file overflow.c, line 7.
(gdb) list
1	#include <stdio.h>
2	
3	#define SIZE 4
4	#define OVERFLOW 5
5	
6	int main() {
7	    int index = 0;
8	    int i;
9	    int k = 10;
10	    int a[SIZE] = {0, 0, 0, 0};
(gdb) list
11	    int j = 10;
12	    
13	    printf("Address of the variables:\n");
14	    printf("%lx -> &j\n", (unsigned long)&j);
15	    for (index = 0; index < SIZE; index++) {
16	        printf("%lx -> &a[%d]\n", (unsigned long) &a[index], index);
17	    }
18	    
19	    printf("%lx -> &k\n", (unsigned long)&k);
20	    printf("%lx -> &i\n", (unsigned long)&i);
(gdb) list
21	    printf("\n");
22	
23	    
24	    printf("Initial values: ");
25	    printf("i = %d, j = %d, k = %d\n", i, j, k);
26	    printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
27	    printf("\n");
28	    
29	    
30	    for (i = 0; i < OVERFLOW; i++) {
(gdb) break 30
Breakpoint 2 at 0x4006d8: file overflow.c, line 30.
(gdb) run
Starting program: /h/u13/g5/00/akaddoga/overflow 

Breakpoint 1, main () at overflow.c:7
7	    int index = 0;
(gdb) display i
1: i = 4196176
(gdb) continue
Continuing.
Address of the variables:
7fffffffe518 -> &j
7fffffffe520 -> &a[0]
7fffffffe524 -> &a[1]
7fffffffe528 -> &a[2]
7fffffffe52c -> &a[3]
7fffffffe514 -> &k
7fffffffe510 -> &i

Initial values: i = 4196176, j = 10, k = 10
a = {0, 0, 0, 0}


Breakpoint 2, main () at overflow.c:30
30	    for (i = 0; i < OVERFLOW; i++) {
1: i = 4196176
(gdb) next
31	        a[i] = i * 10;
1: i = 0
(gdb) print &i
$1 = (int *) 0x7fffffffe510
(gdb) print * &a[4]
$2 = (int *) 0x7fffffffe530
(gdb) quit
A debugging session is active.

	Inferior 1 [process 10983] will be killed.

Quit anyway? (y or n) y
b2210-01:~% ext[Kit
exit

Script done on Sun Oct 30 19:28:59 2016
